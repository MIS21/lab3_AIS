version: '2.1'

services:
  db-node-1:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      interval: 15s
      timeout: 1s
      retries: 5
    volumes:
      - db-node-1-data:/var/lib/mysql

  db-node-2:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      interval: 15s
      timeout: 1s
      retries: 5
    volumes:
      - db-node-2-data:/var/lib/mysql

  db-node-3:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-3
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      interval: 15s
      timeout: 1s
      retries: 5
    volumes:
      - db-node-3-data:/var/lib/mysql

      
  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    volumes:
      - proxysql-data:/var/lib/proxysql
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"
    depends_on:
      db-node-1:
        condition: service_healthy
      db-node-2:
        condition: service_healthy
      db-node-3:
        condition: service_healthy


  user_service:
    build:
      context: user_service
      dockerfile: Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8080:8080
    networks:
      - arch-network
    depends_on:
      - proxysql


  # item_service:
  #   build:
  #     context: item_service
  #     dockerfile: Dockerfile
  #   container_name: item_service
  #   environment:
  #     - DB_HOST=proxysql
  #     - DB_PORT=6033
  #     - DB_LOGIN=stud
  #     - DB_PASSWORD=stud
  #     - DB_DATABASE=archdb
  #   ports:
  #     - 8082:8082
  #   networks:
  #     - arch-network
  #   depends_on:
  #    - proxysql

  # cart_service:
  #   build:
  #     context: cart_service
  #     dockerfile: Dockerfile
  #   container_name: cart_service
  #   environment:
  #     - DB_HOST=proxysql
  #     - DB_PORT=3306
  #     - DB_LOGIN=stud
  #     - DB_PASSWORD=stud
  #     - DB_DATABASE=archdb
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - arch-network
  #   depends_on:
  #     - user_service
  #     - item_service  
  #     - proxysql

volumes:
  db-node-1-data:
  db-node-2-data:
  db-node-3-data:
  proxysql-data:

networks:
  arch-network:
    driver: "bridge"
    external: false